const nodemailer = require("nodemailer");
const { jsPDF } = require("jspdf");
const express = require("express");
const app = express.Router();
// Function to generate PDF
function generatePDF(reportData) {
  const doc = new jsPDF();

  // Styling Details
  const greenColor = [34, 139, 34]; // Green color in RGB
  const marginLeft = 20;
  let currentY = 20;

  // --- Header Section ---
  doc.setFontSize(20);
  doc.setTextColor(...greenColor);
  doc.text("Carbon Emissions Report", 105, currentY, { align: "center" });

  doc.setDrawColor(...greenColor);
  doc.line(marginLeft, currentY + 5, 190, currentY + 5); // Green underline
  currentY += 15;

  // --- Selected Options Section ---
  doc.setFontSize(14);
  doc.setTextColor(0, 0, 0);
  doc.text("Selected Values:", marginLeft, currentY);
  currentY += 8;

  doc.setFontSize(12);
  doc.text(`Sector: ${reportData.sector}`, marginLeft, currentY);
  currentY += 6;
  doc.text(`Geography: ${reportData.geography}`, marginLeft, currentY);
  currentY += 6;
  doc.text(
    `ISIC Classes: ${reportData.isicClasses.join(", ")}`,
    marginLeft,
    currentY
  );
  currentY += 6;
  doc.text(
    `Activities: ${reportData.activities.join(", ")}`,
    marginLeft,
    currentY
  );
  currentY += 10;

  // --- Activity Details Table ---
  doc.setFillColor(...greenColor);
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(12);

  // Table Headers
  doc.rect(marginLeft, currentY, 170, 10, "F"); // Table header background
  doc.text("Activity", marginLeft + 5, currentY + 7);
  //   doc.text("Question", marginLeft + 45, currentY + 7);
  doc.text("Input (Kg)", marginLeft + 55, currentY + 7);
  doc.text("Rate (tCO2e/Kg)", marginLeft + 95, currentY + 7);
  doc.text("Total Emission", marginLeft + 135, currentY + 7);
  currentY += 10;

  // Table Rows
  let totalEmission = 0;
  reportData.activitiesDetails.forEach((activity, index) => {
    const isEvenRow = index % 2 === 0;
    if (isEvenRow)
      doc.setFillColor(245, 255, 245); // Light green background for even rows
    else doc.setFillColor(255, 255, 255); // White background for odd rows

    doc.rect(marginLeft, currentY, 170, 10, "F");
    doc.setTextColor(0, 0, 0);
    doc.text(activity.name, marginLeft + 5, currentY + 7);
    // doc.text(activity.question, marginLeft + 45, currentY + 7);
    doc.text(activity.input.toString(), marginLeft + 55, currentY + 7);
    doc.text(activity.rate.toString(), marginLeft + 95, currentY + 7);

    const emission = (activity.input * activity.rate).toFixed(2);
    doc.text(emission, marginLeft + 135, currentY + 7);
    totalEmission += parseFloat(emission);

    currentY += 10;
  });

  // --- Summary of Total Emissions ---
  currentY += 5;
  doc.setFillColor(...greenColor);
  doc.setTextColor(255, 255, 255);
  doc.rect(marginLeft, currentY, 170, 10, "F");
  doc.text(
    `Total Emissions: ${totalEmission.toFixed(2)} tCO2e`,
    marginLeft + 5,
    currentY + 7
  );
  currentY += 15;

  // --- Footer Section ---
  doc.setFontSize(10);
  doc.setTextColor(0, 0, 0);
  doc.text("Generated by ACTS.Earth", marginLeft, currentY);
  doc.text(new Date().toLocaleString(), 180, currentY, { align: "right" });
  doc.save();

  const pdfBuffer = Buffer.from(doc.output("arraybuffer")); // Convert to Buffer
  return pdfBuffer;
}
// Sample Report Data
// const reportData = {
//   sector: "Transportation",
//   geography: "Global",
//   isicClasses: ["Class 1", "Class 2"],
//   activities: ["Vehicle Usage", "Fuel Consumption"],
//   activitiesDetails: [
//     { name: "Vehicle Usage", question: "Distance traveled in Km?", input: 300, rate: 0.5 },
//     { name: "Fuel Consumption", question: "Liters of fuel consumed?", input: 500, rate: 0.25 },
//   ],
// };

// Email Configuration using Nodemailer
const transporter = nodemailer.createTransport({
  service: "gmail", // You can use other email services here
  auth: {
    user: "sheharyarxd@gmail.com", // Replace with your email
    pass: "dvle onvl qmod jrmd", // Replace with your email password or app-specific password
  },
});

function sendEmail(pdfBuffer, recipientEmail) {
  const mailOptions = {
    from: "sheharyarxd@gmail.com",
    to: recipientEmail,
    subject: "Carbon Emissions Report",
    text: "Please find the carbon emissions report attached.",
    attachments: [
      {
        filename: "carbon_emissions_report.pdf",
        content: pdfBuffer,
        encoding: "base64",
      },
    ],
  };

  // Send the email
  return transporter.sendMail(mailOptions);
}

app.get("/send-report", async (req, res) => {
  const doc = new jsPDF();

  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.text("ACTS.Earth", 28, 17);
  
   doc.setFontSize(42);
   doc.setFont("Arial", "bold");
   doc.text("Transportation", 20, 40);
   doc.text("Carbon Emissions", 20, 54);
   doc.text("Report", 20, 68);
  
   doc.setFontSize(12);
   doc.setFont("helvetica", "bold");
   doc.text("Reporting Period:", 20, 84);
   doc.text("Sector:", 115, 84);
   doc.setFont("helvetica", "normal");
   doc.text("12/17/2024, 10:18:59 PM", 33, 90);
   doc.text("Transportation", 140, 90);
  doc.line(20, 114, 100, 114);
  doc.line(20, 93, 100, 93);
  doc.line(115, 114, 190, 114);
  doc.line(115, 93, 190, 93);
  
   doc.setFont("helvetica", "bold");
   doc.text("Activities:", 20, 104);
   doc.text("Geography:", 115, 104);
    doc.setFont("helvetica", "normal");
   doc.text("Vehicle Usage, Fuel Consumption", 28, 111);
   doc.text("Global", 145, 111);
   
    doc.setFontSize(16);
    doc.setFont("Gordita", "bold");
    doc.setTextColor("#0000");
    doc.text("Project Components", 30, 129);
  
   
    doc.setFillColor("#C8E563");
    doc.rect(20, 135, 170, 12, "F"); // Header background
    doc.rect(20, 135, 170, 35); // Outer border of the table
    // Column Headers
    doc.setFontSize(10);
    doc.setFont("helvetica", "bold");
    doc.text("Components", 30, 143);
    doc.text("Input(kg)", 76, 143);
    doc.text("Rate (tCO2e/Kg)", 113, 143);
    doc.text("Total Emission", 157, 143);
  
    // Draw gridlines for the table
    doc.line(20, 147, 190, 147); // Horizontal line under headers
    doc.line(62, 135, 62, 170); // Vertical line (Components | Input(kg))
    doc.line(105, 135, 105, 170); // Vertical line (Input(kg) | Rate)
    doc.line(148, 135, 148, 170); // Vertical line (Rate | Total Emission)
    doc.line(20, 159, 190, 159); 
   
    // Table Rows
    doc.setFont("helvetica", "normal");
    doc.text("Vehicle Usage", 28, 155);
    doc.text("300", 80, 155);
    doc.text("0.5", 125, 155);
    doc.text("150.00", 165, 155);
  
    doc.text("Fuel Consumption", 28, 166);
    doc.text("500", 80, 166);
    doc.text("0.25", 125, 166);
    doc.text("125.00", 165, 166);
  
   doc.setFontSize(16);
    doc.setFont("Gordita", "bold");
    doc.setTextColor("#0000");
    doc.text("Project MileStone", 30, 182);
  
   
    doc.setFillColor("#C8E563");
    doc.rect(20, 188, 170, 12, "F"); // Header background
    doc.rect(20, 188, 170, 35); // Outer border of the table
    // Column Headers
    doc.setFontSize(10);
    doc.setFont("helvetica", "bold");
    doc.text("Components", 30, 196);
    doc.text("Input(kg)", 76, 196);
    doc.text("Rate (tCO2e/Kg)", 113, 196);
    doc.text("Total Emission", 157, 196);
  
    // Draw gridlines for the table
    doc.line(20, 200, 190, 200); // Horizontal line under headers
    doc.line(62, 188, 62, 223); // Vertical line (Components | Input(kg))
    doc.line(105, 188, 105, 223); // Vertical line (Input(kg) | Rate)
    doc.line(148, 188, 148, 223); // Vertical line (Rate | Total Emission)
    doc.line(20, 211, 190, 211); 
   
    // Table Rows
    doc.setFont("helvetica", "normal");
    doc.text("Vehicle Usage", 28, 207);
    doc.text("300", 80, 207);
    doc.text("0.5", 125, 207);
    doc.text("150.00", 165, 207);
  
    doc.text("Fuel Consumption", 28, 218.5);
    doc.text("500", 80, 218.5);
    doc.text("0.25", 125, 218.5);
    doc.text("125.00", 165, 218.5);
  
  doc.setFontSize(16);
    doc.setFont("Gordita", "bold");
    doc.setTextColor("#0000");
    doc.text("Summary", 30, 240);
    
    doc.setFontSize(10);
    doc.setFont("helvetica", "normal");
    doc.text(
      "The total emissions calculated for the transportation sector are 275.00 tCO2e. This includes 150.00 tCO2e from vehicle usage and 125.00 tCO2e from fuel consumption.",
      25,
      248,
      { maxWidth: 160 }
    );
    doc.line(20, 256, 190, 256);
  const pdfData = doc.output("arraybuffer");
  res.setHeader("Content-Type", "application/pdf");
  res.setHeader("Content-Disposition", "inline; filename=report.pdf");
  res.send(Buffer.from(pdfData));
  // Save the PDF

  //  return res.status(400).send('Recipient email is required.');
});
app.post("/send-report", async (req, res) => {
  try {
    const reportData = req.body;
    const pdfBuffer = generatePDF(reportData);
    console.log(pdfBuffer); // Optionally, check if this prints a valid buffer

    // Extract recipient email from request body (e.g., { email: "user@example.com" })
    //   const { email } = req.body;
    const email = reportData.email;

    if (!email) {
      return res.status(400).send("Recipient email is required.");
    }

    // Send email with the generated PDF
    await sendEmail(pdfBuffer, email);

    res.status(200).send("Email sent successfully!");
  } catch (error) {
    console.error("Error generating or sending report:", error);
    res.status(500).send("Error generating or sending report.");
  }
});
// Export functions
module.exports = app;
